name: "baseline_test"
description: "use jina-ai/executor-cases test jina and jina hub"
inputs:
  node_version:
    description: "node_version"
    required: true
    default: "lts/*"
  python_version:
    description: python_version
    default: "3.7"
    required: true
  case_path:
    description: "case_path"
    required: true
    default: "success/case1"
  extended_github_token:
    description: "extended_github_token"
    required: true
  node_env:
    description: "node_env"
    required: false
    default: "testing"
  hubble_ref:
    description: "hubble_ref"
    required: false
    default: "refs/heads/master"
  jina_ref:
    description: "jina_ref"
    required: false
    default: "refs/heads/master"
  jina_hubble_registry:
    description: "jina_hubble_registry"
    required: false
    default: "http://localhost:3000"
  action_hubble_path:
    description: "default hubble path avoid conflict with the original repo"
    required: false
    default: "actions__hubble"
  action_jina_path:
    description: "default jina path avoid conflict with the original repo"
    required: false
    default: "actions__jina"
  action_cases_path:
    description: "default cases path avoid conflict with the original repo"
    required: false
    default: "actions__cases"
outputs:
  result:
    description: "result"
    value: ${{ steps.finally.outputs.result }}
runs:
  using: composite
  steps:
    - name: Clone latest hubble code
      uses: actions/checkout@v3
      with:
        repository: jina-ai/hubble
        token: ${{ inputs.extended_github_token }}
        ref: ${{ inputs.hubble_ref }}
        path: ${{ inputs.action_hubble_path }}
        lfs: true

    - name: Start containers
      run: |
        mkdir -p /tmp/jina-uploaded /tmp/jina-hubble-temp
        sudo chown -R $USER:$USER /tmp/jina-uploaded /tmp/jina-hubble-temp
        docker-compose -f "docker-compose.yml" up --build -d
      shell: bash
      working-directory: ${{ inputs.action_hubble_path }}
      env:
        NODE_ENV: ${{ inputs.node_env }}

    - name: Use Node.js ${{ inputs.node_version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ inputs.node_version }}
    - run: yarn install --frozen-lockfile
      working-directory: ${{ inputs.action_hubble_path }}
      shell: bash
    - run: npm run build
      working-directory: ${{ inputs.action_hubble_path }}
      shell: bash

    - name: Create test user
      run: >
        node bin/cli.js run modules/user/control/identity 
        --target UserIdentityControl --resolve 
        --call registerByNameAndPassword 
        --args testUser testPassword123 
        --quit
      shell: bash
      working-directory: ${{ inputs.action_hubble_path }}
      env:
        NODE_ENV: ${{ inputs.node_env }}
        HUBBLE_DISABLE_SANDBOX: 'true'
        HUBBLE_DISABLE_PAYMENT: 'true'
        GITHUB_TOKEN: ${{ inputs.extended_github_token }}
    - name: Login test user
      run: >
        node bin/cli.js call user.identity.passwordLogin
        -i name=testUser password=testPassword123
        -o output.json
      shell: bash
      working-directory: ${{ inputs.action_hubble_path }}
      env:
        NODE_ENV: ${{ inputs.node_env }}
        HUBBLE_DISABLE_SANDBOX: 'true'
        HUBBLE_DISABLE_PAYMENT: 'true'
        GITHUB_TOKEN: ${{ inputs.extended_github_token }}
    - name: Fake jina auth login
      run: |
        mkdir -p ~/.jina
        cat output.json | jq '{auth_token:.data.token}' > ~/.jina/config.json
      shell: bash
      working-directory: ${{ inputs.action_hubble_path }}
      env:
        NODE_ENV: ${{ inputs.node_env }}
        HUBBLE_DISABLE_SANDBOX: 'true'
        HUBBLE_DISABLE_PAYMENT: 'true'

    - run: >
        node bin/watcher.js > ./watcher.log &
      env:
        NODE_ENV: ${{ inputs.node_env }}
        HUBBLE_DISABLE_SANDBOX: 'true'
        HUBBLE_DISABLE_PAYMENT: 'true'
        GITHUB_TOKEN: ${{ inputs.extended_github_token }}
      shell: bash
      working-directory: ${{ inputs.action_hubble_path }}

    - run: npm run start:prod > ./server.log &
      env:
        NODE_ENV: ${{ inputs.node_env }}
        HUBBLE_DISABLE_SANDBOX: 'true'
        HUBBLE_DISABLE_PAYMENT: 'true'
        GITHUB_TOKEN: ${{ inputs.extended_github_token }}
      shell: bash
      working-directory: ${{ inputs.action_hubble_path }}

    - run: >
        node bin/cli.js run modules/executor/worker/container-builder
        --call serviceReady > ./worker.log &
      env:
        NODE_ENV: ${{ inputs.node_env }}
        HUBBLE_DISABLE_SANDBOX: 'true'
        HUBBLE_DISABLE_PAYMENT: 'true'
      shell: bash
      working-directory: ${{ inputs.action_hubble_path }}

    - name: Use Python ${{ inputs.python_version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}

    - name: Clone latest jina code
      uses: actions/checkout@v3
      with:
        repository: jina-ai/jina
        token: ${{ inputs.extended_github_token }}
        ref: ${{ inputs.jina_ref }}
        path: ${{ inputs.action_jina_path }}

    - name: pip install jina
      env:
        JINA_HUBBLE_REGISTRY: ${{ inputs.jina_hubble_registry }}
        JINA_OPTOUT_TELEMETRY: 'true'
      run: pip install -q '.[standard]'
      shell: bash
      working-directory: ${{ inputs.action_jina_path }}

    - name: Clone latest case1-9 code
      uses: actions/checkout@v3
      with:
        repository: jina-ai/executor-cases
        token: ${{ inputs.extended_github_token }}
        ref: refs/heads/main
        path: ${{ inputs.action_cases_path }}

    - name: Check node server
      env:
        JINA_HUBBLE_REGISTRY: ${{ inputs.jina_hubble_registry }}
      run: |
        status=1
        for ((i=1;i<=30;i++));
        do
          curl --silent --fail $JINA_HUBBLE_REGISTRY/ping
          status=$?
          if test $status = 0; then
            break
          fi
          sleep 2
        done
        exit $status
      shell: bash {0}

    - name: test case - ${{ inputs.case_path }}
      env:
        JINA_HUBBLE_REGISTRY: ${{ inputs.jina_hubble_registry }}
        JINA_OPTOUT_TELEMETRY: 'true'
      id: do_test
      run: jina hub push ${{ inputs.case_path }} | tee ./build.log
      working-directory: ${{ inputs.action_cases_path }}
      shell: bash

    - name: extract id
      id: extract_id
      run: cat ./build.log | grep -oE "executor/[0-9a-z]*" | sed 's/\// /' | awk '{printf "id=%s", $2}' >> $GITHUB_OUTPUT
      working-directory: ${{ inputs.action_cases_path }}
      shell: bash

    - name: run executor
      env:
        JINA_HUBBLE_REGISTRY: ${{ inputs.jina_hubble_registry }}
        JINA_OPTOUT_TELEMETRY: 'true'
      run: jina executor --uses jinaai://testUser/${{ steps.extract_id.outputs.id }} > ./executor.log &
      working-directory: ${{ inputs.action_cases_path }}
      shell: bash

    - name: get docker compose logs
      if: always()
      run: docker-compose logs -t > ./docker-compose.log
      working-directory: ${{ inputs.action_hubble_path }}
      shell: bash

    - name: Stop containers
      if: always()
      run: docker-compose -f "docker-compose.yml" down
      working-directory: ${{ inputs.action_hubble_path }}
      shell: bash

    - name: Archive logs
      if: failure()
      uses: actions/upload-artifact@v3
      with:
        name: logs
        path: |
          ${{ inputs.action_cases_path }}/*.log
          ${{ inputs.action_hubble_path }}/*.log

    - name: finally
      id: finally
      run: echo "result=0" >> $GITHUB_OUTPUT
      shell: bash
