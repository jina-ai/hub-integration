name: 'sanity-check'
description: 'include docarray executor artifact user-api sanity check'
inputs:
  python_version:
    description: 'python version'
    required: false
    default: '3.7'
  jina_auth_token:
    description: 'jina auth token, use it test user api'
    required: false
  jina_ref: 
    description: 'branch ref'
    default: 'refs/heads/master'
    required: false
  action_jina_path: 
    description: 'default jina path avoid conflict with the original repo'
    required: false
    default:  'actions__jina'
  extended_github_token: 
    description: 'extended_github_token'
    required: true
outputs:
  result:
    description: 'result'
    value: ${{ steps.finally.outputs.result }}
runs:
  using: composite
  steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ inputs.python_version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python_version }}

    - name: Clone latest jina code
      uses: actions/checkout@v3
      with:
        repository: jina-ai/jina
        token: ${{ inputs.extended_github_token }}
        ref: ${{ inputs.jina_ref }}
        path: ${{ inputs.action_jina_path }}
    
    - name: pip install jina
      env:
        JINA_OPTOUT_TELEMETRY: 'true'
      working-directory: ${{ inputs.action_jina_path }}
      run: pip install -q '.[standard]'
      shell: bash

    - name: Run jina auth login to deploy docker helper
      env:
        JINA_AUTH_TOKEN: ${{ inputs.jina_auth_token }}
        JINA_OPTOUT_TELEMETRY: 'true'
      run: |
          jina auth login
      shell: bash

    - name: Run checks
      env:
        JINA_AUTH_TOKEN: ${{ inputs.jina_auth_token }}
        GITHUB_ACTION_PATH: ${{ github.action_path }}
        JINA_OPTOUT_TELEMETRY: 'true'
      run: |
          jina hub push --private --force-update SanityCheck ${{ github.action_path }}/src/executors/SanityCheck
          python ${{ github.action_path }}/src/check-docarray.py
          python ${{ github.action_path }}/src/check-executor-pull.py
          python ${{ github.action_path }}/src/check-artifact.py
          python ${{ github.action_path }}/src/check-user-api.py
          python ${{ github.action_path }}/src/docker-source-combine.py
      shell: bash

    - name: finally
      id: finally
      run: echo "result=0" >> $GITHUB_OUTPUT
      shell: bash
  
